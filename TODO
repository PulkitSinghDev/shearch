const stanzaRegex = /<stanza[^>]+>/;
stanzanumRegex = /<stanzanum[^>]+>/;
quatrainRegex = /<quatrain[^>]+>/;
lineRegex = /<line[^>]+>/;

const poembody = document.getElementsByTagName('poembody')[0].textContent;
// Some opening tags have attributes, some don't.
poembody = poembody.
  replace(stanzaRegex, '<section class="stanza">').
  replace('</stanza>', '</section>').
  replace('<intro>', '<section class="intro">').
  replace('</intro>', '</section>').
  replace('<dedication>', '<section class="dedication">').
  replace('</dedication>', '</section>').
  replace(stanzanumRegex, '<h2>').
  replace('</stanzanum>', '</h2>').
  replace(quatrainRegex, '<section.class="quatrain">').
  replace('</quatrain>', '</section>').
  replace('<couplet>', '<section.class="couplet">')
  replace('</couplet>', '</section>').
  replace('<stanzasmall>', '<section class="stanzasmall">').
  replace('</stanzasmall>', '</section>').
  replace('<subtitle>', '<h2 class="subtitle">').
  replace('</subtitle>', '</h2>').
  replace('<finis>', '<h2 class="finis">').
  replace('</finis>', '</h2>').
  replace(lineRegex, '<p>').
  replace('</line>', '</p>').




Update HTML for meta tags, etc.

shearch.me
shearch.me#wherefore
shearch.me/Hamlet
shearch.me/Ham
shearch.me/Ham.3.2.11

Search:
• Set URL: shearch.me#wherefore

Click on result:
• Set URL (and if necessary, data for stage dir): shearch.me/Ham.3.2.11
• Set iframe src

Open page
• shearch.me
• shearch.me#wherefore: display search results
• shearch.me/Hamlet or shearch.me/Ham: display play
• shearch.me/Ham.3.2.11: display location


• order results by text
• tap/click on word does search for that word:



function searchForWord(word) {
  console.log(word);
}

// • remove class="poem" from section
// • get rid of query input jump when displaying text

// • Create HTML for poems
// • Display poem
// • Use PlayShakespeare texts
// • Add indentation
// • Add advanced search

// poems

function addPoemSections(poem){

  const sections = poem.querySelectorAll('finis', 'intro', 'dedication',
    'subtitle', 'stanza', 'quatrain', 'couplet', 'stanzasmall')
  for (section of sections) {
    let html = '<section class="${sectionName}">';
    const chidren = section.children;
    for (child of children) {
      let lineIndex = 0;
      switch(child.nodeName) {
      case 'line':
        const isNumbered = (lineIndex + 1) % 5 === 0 && lineIndex !== 0;
        const number = isNumbered ? ' class="number"' : '';
        html += `    <li${number}>${lines[i].textContent}</li>\n`;
        ++lineIndex;
      default:
        console.error(`Unknown poem section ${child.nodeName}`);
      }
    }
  }
  html += '</section>\n\n';
}


  html += '  <ol>\n';
  const lines = document.getElementsByTagName('line');
  for (let i = 0; i !== lines.length; ++i) {
    // add class="number" if this line should be numbered
    const isNumbered = (i + 1) % 5 === 0 && i !== 0;
    const number = isNumbered ? ' class="number"' : '';
    html += `    <li${number}>${lines[i].textContent}</li>\n`;
  }
  html += '</ol>\n';




poem
 title:
 ?poemintro
   ?dedication
     ?subtitle::
     ?line:
     ?dedauthor
  ?poembody
    stanza
      ?line::
      ?quatrain
        ?line::
        ?couplet
          ?line::
      ?couplet
        line::
    ?stanzasmall
      ?line::
      ?quatrain
        ?line::
      couplet
        line::
    subtitle
    finis
      finistitle:



Search content:
• Play
• Act number
• Persona
• Scene description
• Stage direction
• Speaker
• Line

Search options:
• Play
• Act number
• Scene number
• Speaker

Autofill
• Play
• Act number (given play)
• Scene number (given play and act)
• Speaker (given play — maybe)
• Previous queries

Ideas
• Click/tap on word: search

3500 lines
280 stagedirs
38 plays
max about 130,000 items
total about 12,000,000 characters

